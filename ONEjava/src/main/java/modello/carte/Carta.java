// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package modello.carte;

import modello.Partita;

/************************************************************/

/**
 * classe astratta che modella una carta generica
 * 
 * attributi importanti:
 * colore, che puÃ² essere cambiato (caso jolly)
 * 
 * metodi importanti:
 * giocabileSu()--> astratto, confronta la carta giocata(this) con quella sul banco (passato come input)
 * 
 */
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonSubTypes;

@JsonTypeInfo(
    use = JsonTypeInfo.Id.NAME,           // usa un nome leggibile
    include = JsonTypeInfo.As.PROPERTY,   // aggiungi un campo nel JSON
    property = "tipoCarta"                // nome del campo nel JSON
)
@JsonSubTypes({
    @JsonSubTypes.Type(value = CartaNumero.class, name = "numero"),
    @JsonSubTypes.Type(value = CartaSpeciale.class, name = "speciale")
})
public abstract class Carta implements Comparable<Carta> {
	protected Colore colore;

	//costruttore vuoto per Jackson
	public Carta() {}
	
	public Carta(Colore colore) {
		this.colore=colore;
	}
	
	public Colore getColore() {
		return this.colore;
	}
	

	public void setColore(Colore colore) {
		this.colore = colore;
	}
	
	public abstract void applicaEffetto(Partita p);

	public abstract boolean giocabileSu(Carta c);
	
	@Override
	public int compareTo(Carta other) {
		switch(this.colore) {
		case NERO:{
			if(other.colore==Colore.NERO)
				return 0;
			else
				return -1;
		}
			
		case ROSSO:{
			switch(other.colore) {
			case NERO: return 1;
			case ROSSO: return 0;
			default: return -1;
			}
			
		}
		
		case BLU:{
			switch(other.colore) {
			case NERO: return 1;
			case ROSSO: return 1;
			case BLU: return 0;
			default: return -1;
			}
		}
		
		case GIALLO:{
			switch(other.colore) {
			case NERO: return 1;
			case ROSSO: return 1;
			case BLU: return 1;
			case GIALLO: return 0;
			default: return -1;
			}
		}
			
		default:{
			switch(other.colore) {
			case NERO: return 1;
			case ROSSO: return 1;
			case BLU: return 1;
			case GIALLO: return 1;
			default: return 0;
			}
		}
		}
	}
	
}
