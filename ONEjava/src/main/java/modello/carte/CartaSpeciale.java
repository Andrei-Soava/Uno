// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package modello.carte;

import modello.Partita;

/************************************************************/
/**
 * classe che modella una carta speciale (estende carta)
 * 
 * attributi importanti:
 * tipo, enumerato che modella i tipi speciali (piu_due, piu_quattro, inverti, blocca, jolly)
 * 
 * metodi importanti:
 * giocabileSu()--> override da carta (guardare l√¨ per semantica)
 */
public class CartaSpeciale extends Carta {
	public enum TipoSpeciale {
		
		PIU_DUE,
		
		PIU_QUATTRO,
		
		BLOCCA,
		
		INVERTI,
		
		JOLLY
		;
	}
	private TipoSpeciale tipo;
	
	//costruttore vuoto per Jackson
	public CartaSpeciale() {this.tipo = null;}
	
	public CartaSpeciale(Colore colore, TipoSpeciale tipo) {
		super(colore);
		this.tipo=tipo;
	}
	
	@Override
	public void applicaEffetto(Partita p) {
			switch (this.getTipo()) {
			case PIU_DUE:
				p.prossimoGiocatore();
				p.getGiocatoreCorrente().getMano().aggiungiCarta((p.getMazzo().pescaN(2)));
				break;
			case PIU_QUATTRO:
				p.prossimoGiocatore();
				p.getGiocatoreCorrente().getMano().aggiungiCarta((p.getMazzo().pescaN(4)));
				break;
			case BLOCCA:
				p.prossimoGiocatore();
				break;
			case INVERTI:
				p.cambiaDirezione();
				break;
			default:
				p.prossimoGiocatore();
				break;
			}
	}
	
	public boolean giocabileSu(Carta c) {
		if(this.colore==c.colore || this.colore==Colore.NERO)
			return true;
		if(c instanceof CartaSpeciale && this.tipo==((CartaSpeciale)c).tipo)
			return true;
		return false;
	}

	public TipoSpeciale getTipo() {
		return tipo;
	}
	
	public void setTipo(TipoSpeciale tipo) {
		this.tipo=tipo;
	}
	
	@Override
	public String toString() {
		return "CartaSpeciale [tipo=" + tipo + ", colore=" + colore + "]";
	}
	
}
